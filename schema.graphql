type Article @entity {
  id: ID! # Storage address + blocknumber
  articleID: String! # Actual IPFS content id of the article.
  owner: Bytes! # The owner of the article
  category: Int!
  bounty: BigInt! # uint256
  status: Status
  challenger: Bytes
  withdrawalPermittedAt: BigInt
  lastCalculatedScore: BigInt!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
  lastBalanceUpdate: BigInt!
  disputes: [DisputeEntity!] @derivedFrom(field: "article")
  events: [EventEntity!] @derivedFrom(field: "article")
  arbitrator: ArbitratorEntity!
  arbitratorExtraData: Bytes
}

type ArticleStorage @entity {
  id: ID! # article storage address
  articleEntityID: String! # primary key of Article entity
}



type ContributionEntity @entity {
  id: ID! # DisputeID-round-contributor-ruling
  #contributor: User! @key
  amount: BigInt!
}

#type User @entity {
#  id: ID! # address
#  contributions: [ContributionEntity!]! 
#}

#extend type User @key(fields: "id") {
#  id: ID! @external
#}
#
#extend type RoundEntity @key(fields: "id") {
#  id: ID! @external
#}

type DisputeEntity @entity {
  id: ID! # DisputeID
  ruled: Boolean
  ruling: BigInt
  article: Article!
  period: Period
  lastPeriodChange: BigInt
  court: CourtEntity!
  rounds: [RoundEntity!]! @derivedFrom(field: "dispute")
  #currentRoundIndex: BigInt!
  #totalWithdrawableAmount: [BigInt!]! @resolver(name: "calculateTotalContributions")
  #withdrew: [Boolean!]!
}

type RoundEntity @entity {
  id: ID! # DisputeID-RoundID
  dispute: DisputeEntity!
  jurySize: BigInt!
  raisedSoFar: [BigInt!]! # indexed By Ruling
  appealDeadline: [BigInt!]! # by ruling
  #totalToBeRaised: [BigInt!]!
  hasPaid: [Boolean!]!
}

type CourtEntity @entity {
  id: ID! # CourtID
  policyURI: String
  hiddenVotes: Boolean!
  timesPerPeriod: [BigInt!]!
}

type ArbitratorEntity @entity {
  id: ID! # Arbitrator address
  phase: Phase!
  lastPhaseChange: BigInt!
  lastDelayedSetStake: BigInt!
  nextDelayedSetStake: BigInt!
  minStakingTime: BigInt!
}

type EventEntity @entity {
  id: ID! # transactionHash-logIndex
  name: String!
  details: String # Any extra detail about an event
  timestamp: BigInt!
  from: Bytes!
  article: Article!
}

type MetaEvidenceEntity @entity {
  id: ID! # 0
  uri: String!
}

type CrowdfundingStatus @entity {
  id: ID! # disputeID-round-ruling
  fullyFunded: Boolean!
}

enum Status {
  "I don't know how to use this inside the mapping"
  Absent
  Debunked
  Withdrawn
  TimelockStarted
  Challenged
  Live
}

enum Period {
  evidence
  commit
  vote
  appeal
  execution
}

enum Phase {
  staking
  generating
  drawing
}
